{
    "componentChunkName": "component---src-pages-patterns-file-uploader-usage-mdx",
    "path": "/patterns/fileUploader/usage/",
    "result": {"pageContext":{"frontmatter":{"title":"File uploader","description":"File uploader is used to upload single or multiple files.","tabs":["Usage","Code"]},"relativePagePath":"/patterns/fileUploader/usage.mdx","titleType":"page","MdxNode":{"id":"c998989e-a30c-531d-9dd3-c6af3461dc74","children":[],"parent":"5dec66d2-fa80-5f3c-9df7-257501e24299","internal":{"content":"---\ntitle: File uploader\ndescription: File uploader is used to upload single or multiple files.\ntabs: [\"Usage\", \"Code\"]\n---\n\nFile uploader is the component that can be used to upload file(s) in your application. It consists of the conventional drag and drop method.\n\n### Structure\nFile uploader can be composed using two components - dropzone and file list. As the name suggests, dropzone is the area where the users can drop file(s) to upload whereas file list is a list of the files that have been dropped at the drop zone. These files can be in different states - uploaded, in progress, etc.\n<Preview name=\"dropzone-all\" />\n\n### Sizes\nDropzone component comes in **3 sizes** basis on the space available.\n\n#### Standard\nThis size should be used in cases when there are no constraints in the space available.\n\n![Standard size of dropzone](./images/fileUploader-1.png)\n<br/>\n<br/>\n\n#### Compressed\nThis size should be used when the height available is not sufficient to use the standard size.\n\n![Compressed size of dropzone](./images/fileUploader-2.png)\n<br/>\n<br/>\n\n#### Tight\nThis size should be used when the height and width available is not sufficient to use neither the standard size nor the compressed size.\n\n![Tight size of dropzone](./images/fileUploader-3.png)\n<br/>\n<br/>\n\n### States\nDropzone component comes in **4 states** - default, active, error and disabled.\n\n![States of dropzone](./images/fileUploader-4.png)\n<br/>\n<br/>\n\n### Usage\n<br/>\n\n#### Uploading to the server\nBasis on the requirement, file uploader can either -\n- Upload the file directly to the server the moment a user picks/drops a file **OR**\n- Upload the file only when an Upload, Submit, or similar action is triggered by the user.\n\nIt is suggested to use the latter so as to minimize the resource load (network calls).\n\n#### Status of file uploading\nTo show the status of a file being uploaded, a file uploader item is used which contains information such as the file name, upload progress, any error, etc. Progress ring is used to indicate the progress.\n\n![States of file uploading](./images/fileUploader-5.png)\n\n**Note**: A list of file uploader items is shown using the Flat (No shadow) card component.\n<br/>\n\n#### Responsiveness\nUsing the standard drag and drop file uploader when there is no option to adjust the height dynamically converts it to the compressed variant as shown in the example. \n\nHere the height of the card remains the same and it can accommodate a maximum of 3 file uploader items before scrolling occurs.\n\n![Responsiveness of dropzone](./images/fileUploader-6.jpg)\n<br/>\n<br/>\n\n#### Errors\n##### Before dropping files\nFile uploader provides the option to indicate that a file format is not accepted or the file size exceeds the limit through different visual cues.\n\n**Note**: Users can still drop the file. In that case, a file uploader item will be used to show the error as illustrated in the next section.\n\n![Error before dropping a file](./images/fileUploader-7.jpg)\n<br/>\n<br/>\n\n##### While uploading\nFile uploader also provides the option to indicate that there was an error while uploading the file. These types of errors are shown using the file uploader item.\n\n![Error while uploading a file](./images/fileUploader-8.jpg)\n<br/>\n<br/>\n\n#### File processing required\nFile uploader is a simple component and it does not involve processing or analyzing file(s) as a part of it. But there can be cases when you need to process or analyze the uploaded file to check whether the content of the file matches your requirement(s).\n\nIf the case arises, always process or analyze the file after an Upload, Submit, or similar action has been triggered by the users.\n\n![File processing flow using the file uploader](./images/fileUploader-9.jpg)\n<br/>\n<br/>\n\n#### File uploader in a form\nThe state of the submit button in a form depends on whether the file will be uploaded right away on the server or if it will be uploaded after the users click on submit.\n\n1. If the file has been uploaded to the server already then the submit button becomes enabled only when the file has been uploaded successfully.\n\n![State of submit button when the file has been uploaded to the server already](./images/fileUploader-10.png)\n<br/>\n<br/>\n\n2. If the file has not been uploaded to the server already then the submit button acts as the trigger to upload the files to the server.\n\n![State of submit button when the file has not been uploaded to the server already](./images/fileUploader-11.png)\n<br/>\n<br/>","type":"Mdx","contentDigest":"66141e2596b7681d41166bdf51230c8a","owner":"gatsby-plugin-mdx","counter":1586},"frontmatter":{"title":"File uploader","description":"File uploader is used to upload single or multiple files.","tabs":["Usage","Code"]},"exports":{},"rawBody":"---\ntitle: File uploader\ndescription: File uploader is used to upload single or multiple files.\ntabs: [\"Usage\", \"Code\"]\n---\n\nFile uploader is the component that can be used to upload file(s) in your application. It consists of the conventional drag and drop method.\n\n### Structure\nFile uploader can be composed using two components - dropzone and file list. As the name suggests, dropzone is the area where the users can drop file(s) to upload whereas file list is a list of the files that have been dropped at the drop zone. These files can be in different states - uploaded, in progress, etc.\n<Preview name=\"dropzone-all\" />\n\n### Sizes\nDropzone component comes in **3 sizes** basis on the space available.\n\n#### Standard\nThis size should be used in cases when there are no constraints in the space available.\n\n![Standard size of dropzone](./images/fileUploader-1.png)\n<br/>\n<br/>\n\n#### Compressed\nThis size should be used when the height available is not sufficient to use the standard size.\n\n![Compressed size of dropzone](./images/fileUploader-2.png)\n<br/>\n<br/>\n\n#### Tight\nThis size should be used when the height and width available is not sufficient to use neither the standard size nor the compressed size.\n\n![Tight size of dropzone](./images/fileUploader-3.png)\n<br/>\n<br/>\n\n### States\nDropzone component comes in **4 states** - default, active, error and disabled.\n\n![States of dropzone](./images/fileUploader-4.png)\n<br/>\n<br/>\n\n### Usage\n<br/>\n\n#### Uploading to the server\nBasis on the requirement, file uploader can either -\n- Upload the file directly to the server the moment a user picks/drops a file **OR**\n- Upload the file only when an Upload, Submit, or similar action is triggered by the user.\n\nIt is suggested to use the latter so as to minimize the resource load (network calls).\n\n#### Status of file uploading\nTo show the status of a file being uploaded, a file uploader item is used which contains information such as the file name, upload progress, any error, etc. Progress ring is used to indicate the progress.\n\n![States of file uploading](./images/fileUploader-5.png)\n\n**Note**: A list of file uploader items is shown using the Flat (No shadow) card component.\n<br/>\n\n#### Responsiveness\nUsing the standard drag and drop file uploader when there is no option to adjust the height dynamically converts it to the compressed variant as shown in the example. \n\nHere the height of the card remains the same and it can accommodate a maximum of 3 file uploader items before scrolling occurs.\n\n![Responsiveness of dropzone](./images/fileUploader-6.jpg)\n<br/>\n<br/>\n\n#### Errors\n##### Before dropping files\nFile uploader provides the option to indicate that a file format is not accepted or the file size exceeds the limit through different visual cues.\n\n**Note**: Users can still drop the file. In that case, a file uploader item will be used to show the error as illustrated in the next section.\n\n![Error before dropping a file](./images/fileUploader-7.jpg)\n<br/>\n<br/>\n\n##### While uploading\nFile uploader also provides the option to indicate that there was an error while uploading the file. These types of errors are shown using the file uploader item.\n\n![Error while uploading a file](./images/fileUploader-8.jpg)\n<br/>\n<br/>\n\n#### File processing required\nFile uploader is a simple component and it does not involve processing or analyzing file(s) as a part of it. But there can be cases when you need to process or analyze the uploaded file to check whether the content of the file matches your requirement(s).\n\nIf the case arises, always process or analyze the file after an Upload, Submit, or similar action has been triggered by the users.\n\n![File processing flow using the file uploader](./images/fileUploader-9.jpg)\n<br/>\n<br/>\n\n#### File uploader in a form\nThe state of the submit button in a form depends on whether the file will be uploaded right away on the server or if it will be uploaded after the users click on submit.\n\n1. If the file has been uploaded to the server already then the submit button becomes enabled only when the file has been uploaded successfully.\n\n![State of submit button when the file has been uploaded to the server already](./images/fileUploader-10.png)\n<br/>\n<br/>\n\n2. If the file has not been uploaded to the server already then the submit button acts as the trigger to upload the files to the server.\n\n![State of submit button when the file has not been uploaded to the server already](./images/fileUploader-11.png)\n<br/>\n<br/>","fileAbsolutePath":"/Users/harshjain/Documents/innovaccer/projects/design system/design-system/docs/src/pages/patterns/fileUploader/usage.mdx","__gatsby_resolved":{"frontmatter":{"title":"File uploader"}}}}},
    "staticQueryHashes": ["1514734083","227138135","2319071508","2754858070","3057627995","3390246842","345969789","3719803338"]}