{
    "componentChunkName": "component---src-pages-foundations-interactions-mdx",
    "path": "/foundations/interactions/",
    "result": {"pageContext":{"frontmatter":{"title":"Interactions","description":"Motion can bring the screen to life, guide users through complex experiences, and help move them forward—from here to there, now to next, start to finish—and make progress.","date":"15 June 2021","showMobile":true},"relativePagePath":"/foundations/interactions.mdx","titleType":"page","MdxNode":{"id":"29d765d0-c585-54c5-b722-376dda2d89e8","children":[],"parent":"d5aede64-3b45-592e-94ea-da326700d621","internal":{"content":"---\ntitle: Interactions\ndescription: Motion can bring the screen to life, guide users through complex experiences, and help move them forward—from here to there, now to next, start to finish—and make progress.\ndate: 15 June 2021\nshowMobile: true\n---\n\nMotion helps in conveying action and hierarchy. It can bring the screen to life, guide users through complex experiences, and help move them forward—from now to next and start to finish. These guidelines are based on the Carbon Design System\n\n<br />\n<br />\n\n#### Style\n\nProductivity and expression are both essential to an interface. Reserve expressive motion for occasional, important moments, to better capture the user’s attention and offer a rhythmic break to the productive experience.\nHence there are two styles of motion - Productive motion and Expressive motion.\n\n<br />\n\n##### Productive motion\n\nProductive motion is appropriate for moments when the user needs to focus on completing tasks. Micro-interactions such as button states, dropdowns, revealing additional information, or rendering data tables and visualisations can be designed with productive motion.\n\n<br />\n\n##### Expressive motion\n\nExpressive motion is appropriate for moments such as opening a new page, clicking the primary action button, or when the movement itself conveys a meaning. System alerts and the appearance of notification boxes are great cases for expressive motion.\n\n<br />\n<br />\n\n#### Easing\n\nElements on the screen should speed up quickly and slow down smoothly, obeying the physics of a light-weight material. “Easing curves” describe the precise amount of accelerations in motion. There are three types of easing curves -\n\n<br />\n\n##### Standard easing\n\nUse <Rectangle name={'standard-easing'} /> when an element is visible from the beginning to the end of a motion. Expanding card and the sorting of table rows are good examples.\n\n<br />\n\n##### Entrance easing\n\nWith this style, an element quickly appears and slows down to a stop. Use <Rectangle name={'entrance-ease'} /> when adding elements to the view, such as a modal or toast appearing. Elements moving in response to the user’s input, such as a dropdown opening or toggle switching should also use this style.\n\n<br />\n\n##### Exit easing\n\nUse <Rectangle name={'exit-easing'} /> when removing elements from view, such as closing a modal or toaster. The element speeds up as it exits from view, implying that its departure from the screen is permanent.\n\nAn exception to exits: if an element leaves the view but stays nearby, ready to reappear upon user action, use standard easing instead. A good example of this is a reveal. The reveal leaves the view, but slows down as it exits, implying that it would come to rest just outside the view, and ready to be recalled.\n\n<Card shadow='none'>\n  <Table\n    showMenu={false}\n    separator={true}\n    data={[\n      {\n        curve: 'Standard easing',\n        productive: 'cubic-bezier(0.2, 0, 0.38, 0.9)',\n        expressive: 'cubic-bezier(0.4, 0.14, 0.3, 1)s',\n      },\n      {\n        curve: 'Entrance easing',\n        productive: 'cubic-bezier(0, 0, 0.38, 0.9)',\n        expressive: 'cubic-bezier(0, 0, 0.3, 1)',\n      },\n      {\n        curve: 'Exit easing',\n        productive: 'cubic-bezier(0.2, 0, 1, 0.9)',\n        expressive: 'cubic-bezier(0.4, 0.14, 1, 1)',\n      },\n    ]}\n    schema={[\n      {\n        name: 'curve',\n        displayName: 'Curve',\n        width: '20%',\n        sorting: false,\n        separator: true,\n      },\n      {\n        name: 'productive',\n        displayName: 'Productive',\n        width: '40%',\n        sorting: false,\n        separator: true,\n        cellRenderer: ({ data }) => {\n          return <Rectangle name={data.productive} />;\n        },\n      },\n      {\n        name: 'expressive',\n        displayName: 'Expressive',\n        width: '40%',\n        sorting: false,\n        separator: true,\n        cellRenderer: ({ data }) => {\n          return <Rectangle name={data.expressive} />;\n        },\n      },\n    ]}\n    withHeader={false}\n  />\n</Card>\n\n<br />\n<br />\n<br />\n\n#### Duration\n\nDuration is calculated based on the style and size of the motion. Among the two motion styles, productive motion is significantly faster than expressive motion. Motion’s duration should be dynamic based on the size of the animation; the larger the change in distance (traveled) or size (scaling) of the element, the longer the animation takes.\n\n<br />\n\n##### Duration values\n\n<br />\n\n<Card shadow='none'>\n  <Table\n    showMenu={false}\n    separator={true}\n    data={[\n      {\n        tokens: 'duration--fast-01',\n        usage:\n          'Micro-interactions such as button and toggle',\n        value: '80ms',\n      },\n      {\n        tokens: 'duration--fast-02',\n        usage: 'Micro-interactions such as fade',\n        value: '120ms',\n      },\n      {\n        tokens: 'duration--moderate-01',\n        usage:\n          'Micro-interactions, small expansion, short distance movements',\n        value: '160ms',\n      },\n      {\n        tokens: 'duration--moderate-02',\n        usage: 'Expansion, system communication, toast',\n        value: '240ms',\n      },\n      {\n        tokens: 'duration--slow-01',\n        usage:\n          'Large expansion, important system notifications',\n        value: '4000ms',\n      },\n      {\n        tokens: 'duration--slow-02',\n        usage: 'Background dimming',\n        value: '720ms',\n      },\n    ]}\n    schema={[\n      {\n        name: 'tokens',\n        displayName: 'Tokens',\n        width: '25%',\n        sorting: false,\n        separator: true,\n        cellRenderer: ({ data }) => {\n          return <Rectangle name={data.tokens} />;\n        },\n      },\n      {\n        name: 'usage',\n        displayName: 'Usage',\n        width: '45%',\n        sorting: false,\n        separator: true,\n      },\n      {\n        name: 'value',\n        displayName: 'Value',\n        width: '30%',\n        sorting: false,\n        separator: true,\n      },\n    ]}\n    withHeader={false}\n  />\n</Card>\n","type":"Mdx","contentDigest":"8ac2d155e891246c0ce0c2c8b5924291","owner":"gatsby-plugin-mdx","counter":1619},"frontmatter":{"title":"Interactions","description":"Motion can bring the screen to life, guide users through complex experiences, and help move them forward—from here to there, now to next, start to finish—and make progress.","date":"15 June 2021","showMobile":true},"exports":{},"rawBody":"---\ntitle: Interactions\ndescription: Motion can bring the screen to life, guide users through complex experiences, and help move them forward—from here to there, now to next, start to finish—and make progress.\ndate: 15 June 2021\nshowMobile: true\n---\n\nMotion helps in conveying action and hierarchy. It can bring the screen to life, guide users through complex experiences, and help move them forward—from now to next and start to finish. These guidelines are based on the Carbon Design System\n\n<br />\n<br />\n\n#### Style\n\nProductivity and expression are both essential to an interface. Reserve expressive motion for occasional, important moments, to better capture the user’s attention and offer a rhythmic break to the productive experience.\nHence there are two styles of motion - Productive motion and Expressive motion.\n\n<br />\n\n##### Productive motion\n\nProductive motion is appropriate for moments when the user needs to focus on completing tasks. Micro-interactions such as button states, dropdowns, revealing additional information, or rendering data tables and visualisations can be designed with productive motion.\n\n<br />\n\n##### Expressive motion\n\nExpressive motion is appropriate for moments such as opening a new page, clicking the primary action button, or when the movement itself conveys a meaning. System alerts and the appearance of notification boxes are great cases for expressive motion.\n\n<br />\n<br />\n\n#### Easing\n\nElements on the screen should speed up quickly and slow down smoothly, obeying the physics of a light-weight material. “Easing curves” describe the precise amount of accelerations in motion. There are three types of easing curves -\n\n<br />\n\n##### Standard easing\n\nUse <Rectangle name={'standard-easing'} /> when an element is visible from the beginning to the end of a motion. Expanding card and the sorting of table rows are good examples.\n\n<br />\n\n##### Entrance easing\n\nWith this style, an element quickly appears and slows down to a stop. Use <Rectangle name={'entrance-ease'} /> when adding elements to the view, such as a modal or toast appearing. Elements moving in response to the user’s input, such as a dropdown opening or toggle switching should also use this style.\n\n<br />\n\n##### Exit easing\n\nUse <Rectangle name={'exit-easing'} /> when removing elements from view, such as closing a modal or toaster. The element speeds up as it exits from view, implying that its departure from the screen is permanent.\n\nAn exception to exits: if an element leaves the view but stays nearby, ready to reappear upon user action, use standard easing instead. A good example of this is a reveal. The reveal leaves the view, but slows down as it exits, implying that it would come to rest just outside the view, and ready to be recalled.\n\n<Card shadow='none'>\n  <Table\n    showMenu={false}\n    separator={true}\n    data={[\n      {\n        curve: 'Standard easing',\n        productive: 'cubic-bezier(0.2, 0, 0.38, 0.9)',\n        expressive: 'cubic-bezier(0.4, 0.14, 0.3, 1)s',\n      },\n      {\n        curve: 'Entrance easing',\n        productive: 'cubic-bezier(0, 0, 0.38, 0.9)',\n        expressive: 'cubic-bezier(0, 0, 0.3, 1)',\n      },\n      {\n        curve: 'Exit easing',\n        productive: 'cubic-bezier(0.2, 0, 1, 0.9)',\n        expressive: 'cubic-bezier(0.4, 0.14, 1, 1)',\n      },\n    ]}\n    schema={[\n      {\n        name: 'curve',\n        displayName: 'Curve',\n        width: '20%',\n        sorting: false,\n        separator: true,\n      },\n      {\n        name: 'productive',\n        displayName: 'Productive',\n        width: '40%',\n        sorting: false,\n        separator: true,\n        cellRenderer: ({ data }) => {\n          return <Rectangle name={data.productive} />;\n        },\n      },\n      {\n        name: 'expressive',\n        displayName: 'Expressive',\n        width: '40%',\n        sorting: false,\n        separator: true,\n        cellRenderer: ({ data }) => {\n          return <Rectangle name={data.expressive} />;\n        },\n      },\n    ]}\n    withHeader={false}\n  />\n</Card>\n\n<br />\n<br />\n<br />\n\n#### Duration\n\nDuration is calculated based on the style and size of the motion. Among the two motion styles, productive motion is significantly faster than expressive motion. Motion’s duration should be dynamic based on the size of the animation; the larger the change in distance (traveled) or size (scaling) of the element, the longer the animation takes.\n\n<br />\n\n##### Duration values\n\n<br />\n\n<Card shadow='none'>\n  <Table\n    showMenu={false}\n    separator={true}\n    data={[\n      {\n        tokens: 'duration--fast-01',\n        usage:\n          'Micro-interactions such as button and toggle',\n        value: '80ms',\n      },\n      {\n        tokens: 'duration--fast-02',\n        usage: 'Micro-interactions such as fade',\n        value: '120ms',\n      },\n      {\n        tokens: 'duration--moderate-01',\n        usage:\n          'Micro-interactions, small expansion, short distance movements',\n        value: '160ms',\n      },\n      {\n        tokens: 'duration--moderate-02',\n        usage: 'Expansion, system communication, toast',\n        value: '240ms',\n      },\n      {\n        tokens: 'duration--slow-01',\n        usage:\n          'Large expansion, important system notifications',\n        value: '4000ms',\n      },\n      {\n        tokens: 'duration--slow-02',\n        usage: 'Background dimming',\n        value: '720ms',\n      },\n    ]}\n    schema={[\n      {\n        name: 'tokens',\n        displayName: 'Tokens',\n        width: '25%',\n        sorting: false,\n        separator: true,\n        cellRenderer: ({ data }) => {\n          return <Rectangle name={data.tokens} />;\n        },\n      },\n      {\n        name: 'usage',\n        displayName: 'Usage',\n        width: '45%',\n        sorting: false,\n        separator: true,\n      },\n      {\n        name: 'value',\n        displayName: 'Value',\n        width: '30%',\n        sorting: false,\n        separator: true,\n      },\n    ]}\n    withHeader={false}\n  />\n</Card>\n","fileAbsolutePath":"/Users/harshjain/Documents/innovaccer/projects/design system/design-system/docs/src/pages/foundations/interactions.mdx","__gatsby_resolved":{"frontmatter":{"title":"Interactions"}}}}},
    "staticQueryHashes": ["1514734083","227138135","2319071508","2754858070","3057627995","3390246842","345969789","3719803338"]}