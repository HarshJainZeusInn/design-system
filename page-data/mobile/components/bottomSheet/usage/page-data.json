{
    "componentChunkName": "component---src-pages-mobile-components-bottom-sheet-usage-mdx",
    "path": "/mobile/components/bottomSheet/usage/",
    "result": {"pageContext":{"frontmatter":{"title":"Bottom sheet","description":"Bottom sheets are containers with content that supplements the screen's primary content.","tabs":["Usage","Interactions"],"showMobile":true},"relativePagePath":"/mobile/components/bottomSheet/usage.mdx","titleType":"page","MdxNode":{"id":"06cb256c-c289-5701-95ae-4bcfb158ce4e","children":[],"parent":"52709736-2e94-554f-be82-37966908d3a6","internal":{"content":"---\ntitle: Bottom sheet\ndescription: Bottom sheets are containers with content that supplements the screen's primary content.\ntabs: ['Usage', 'Interactions']\nshowMobile: true\n---\n\nBottom sheets are containers with content that supplements the screen's primary content. It allows people to perform a distinct task that’s related to the parent view without taking them away from their current context.\n\nThese sheets display as a result of a user-initiated action. They slide up from the bottom of the screen to reveal additional information and can be dismissed in order to resume the work in the parent flow. \n\n### Types\n\n<br/>\n\n#### Modal bottom sheet\n\nA sheet of this type appears above other UI elements and must be \ndismissed in order to interact with the underlying content. As indicated by the \nname this sheet will appear along with an overlay to dim the background, giving \nfocus to the bottom sheet. Such sheets are dismissible in nature and hence contain a 'Close' action at the top right.\n\n![Modal bottom sheet](./images/bottomsheet-1.png)\n\n<br/>\n<br/>\n\n#### Non-Modal bottom sheet\n\nThis sheet displays in-app content that supplements the main view and co-exists with the main UI. It remains visible even when not actively in use, resting at the same elevation as an app. \n\nNon-modal sheets can either be dismissible or non-dismissible in nature depending upon the use case. Such sheets are great when you have supplementary actions for people to use without pausing the main task.\n\n![Non-Modal bottom sheet](./images/bottomsheet-2.png)\n\n<br/>\n<br/>\n\n### Properties\n\n<br/>\n\n<Card shadow='none'>\n  <Table\n    showMenu={false}\n    separator={true}\n    data={[\n      {\n        Property: 'Height',\n        Value: 'The height can take following values: \"Up to 60%\" and \"93%\"',\n        Configurable: '❌',\n      },\n      {\n        Property: 'Width',\n        Value: 'Full Width',\n        Configurable: '❌',\n      },\n      {\n        Property: 'Heading',\n        Value: '<Heading>',\n        Configurable: '❌',\n      },\n      {\n        Property: 'Subheading',\n        Value: '<Subheading>',\n        Configurable: 'Optional',\n      },\n      {\n        Property: 'Divider',\n        Value: '-',\n        Configurable: 'Optional',\n      },\n    ]}\n    schema={[\n      {\n        name: 'Property',\n        displayName: 'Property',\n        width: '34%',\n        sorting: false,\n        separator: true,\n        cellType: 'DEFAULT'\n      },\n      {\n        name: 'Value',\n        displayName: 'Value',\n        width: '33%',\n        sorting: false,\n        separator: true\n        \n      },\n      {\n        name: 'Configurable',\n        displayName: 'Configurable?',\n        width: '33%',\n        sorting: false,\n        separator: true\n      },\n    ]}\n    withHeader={false}\n  />\n</Card>\n<br/>\n<br/>\n\n### Usage\n\n<br/>\n\n#### Height Constraints\n\nThere are two types of heights a bottom sheet can have -\n\n-   **Half View - Variable height (up to a max of 60% screen height)** \n\nIn this case, height of the sheet will depend on the content it is accommodating. This dynamic height can go up to 60% of screen height in order to provide easy access to the topmost actions, allowing progressive disclosure of the sheet’s content.\n\n-   **Full View - Fixed maximum height (93% of screen height)** \n\nThis sheet spans across most of the screen height and is suitable for large content.\nIf in case 1 above, the height of the data cannot be predicted i.e. the data can be scrollable or not, it is recommended to transition the 60% height to 93% when a user starts scrolling.\n\n**Note - The figures of 60% and 93% were chosen to maximize the available area for content.**\n\nBased on the content, the bottom sheet can adjust it's height upto 60% of the screen height.\n\n![The bottom sheet can adjust it's height upto 60% of the screen height](./images/bottomsheet-3.png)\n\n<br/>\n\nSheet spanning across most of the screen height, suitable for large content.\n\n![Sheet spanning across most of the screen height](./images/bottomsheet-4.png)\n\n<br/>\n<br/>\n\n#### Scrolling Behaviour\n\nThe height of the bottom sheet can be adjusted by scrolling upwards/downwards on the sheet to take up more of the viewport. Bottom sheets whose contents exceed 60% of the screen height can be pulled across the full screen (93% of the overall height), and then scrolling internally.\n\nAt the time of scrolling, the header sticks to the top of the sheet having a header divider, whereas the content below it scrolls. \n\n<Card shadow='none'>\n  <Table\n    showMenu={false}\n    separator={true}\n    data={[\n      {\n        Property: 'Under 60% of screen height',\n        Value: 'Matches the content height',\n        Configurable: 'No scrolling needed',\n      },\n      {\n        Property: 'Greater than 60% of screen height',\n        Value: 'Recommend default: 60% of screen height, After scroll: 93% of screen height',\n        Configurable: 'On scroll, the sheet expands to its max height and scrolls content internally',\n      },\n    ]}\n    schema={[\n      {\n        name: 'Property',\n        displayName: 'Content',\n        width: '30%',\n        sorting: false,\n        separator: true,\n        cellType: 'DEFAULT'\n      },\n      {\n        name: 'Value',\n        displayName: 'Sheet Height',\n        width: '40%',\n        sorting: false,\n        separator: true\n        \n      },\n      {\n        name: 'Configurable',\n        displayName: 'Scrolling Behaviour',\n        width: '30%',\n        sorting: false,\n        separator: true\n      },\n    ]}\n    withHeader={false}\n  />\n</Card>\n<br/>\n<br/>\n\n<img src='./images/bottomsheet-5.gif' width='100%' height='auto'/>\n\n<br/>\n<br/>\n<br/>\n\n#### Dismissible vs Non-Dismissible Sheet\n\n<br/>\n\n<Card shadow='none'>\n  <Table\n    showMenu={false}\n    separator={true}\n    data={[\n      {\n        Property: 'Dismissible always',\n        Value: 'Dismissible or non-dismissible depending on the use case',\n      },\n    ]}\n    schema={[\n      {\n        name: 'Property',\n        displayName: 'Modal sheet',\n        width: '30%',\n        sorting: false,\n        separator: true,\n        cellType: 'DEFAULT'\n      },\n      {\n        name: 'Value',\n        displayName: 'Non-modal sheet',\n        width: '70%',\n        sorting: false,\n        separator: true\n        \n      },\n    ]}\n    withHeader={false}\n  />\n</Card>\n<br/>\n<br/>\n\n#### Dismissing a Bottom Sheet\n\nBottom sheets can be dismissed in the following ways: \n\n##### Close Button\n\nSheets can be closed by clicking the close affordance in the header of the bottom sheets. \n\n##### Tapping the overlay\n\nModal Sheets can also be closed by clicking on the overlay behind sheets.\n\n<br/>\n\n#### Resizing a sheet with drag handle\n\nA non-modal sheet can be dismissible or not. In case it is not, the users can drag or flick the sheet from the handle bar area to resize and snap it to different heights.\n\nA drag handle **must not be** used to drag down to close a sheet.\n\n<br/>\n\n#### Bottom Sheet vs Page\n\nA page takes people to a whole new space detaching them from the parent flow, whereas a sheet allows part of the parent view to remain visible behind it, helping people retain their original context as they interact with the sheet. \n\nBottom sheets should not have complex flows in them. For complex and multi-step flows consider using pages. \n\n*Do Don't iamge*","type":"Mdx","contentDigest":"2a8f9dea4e9f30069803b3a1a6f29129","owner":"gatsby-plugin-mdx","counter":1611},"frontmatter":{"title":"Bottom sheet","description":"Bottom sheets are containers with content that supplements the screen's primary content.","tabs":["Usage","Interactions"],"showMobile":true},"exports":{},"rawBody":"---\ntitle: Bottom sheet\ndescription: Bottom sheets are containers with content that supplements the screen's primary content.\ntabs: ['Usage', 'Interactions']\nshowMobile: true\n---\n\nBottom sheets are containers with content that supplements the screen's primary content. It allows people to perform a distinct task that’s related to the parent view without taking them away from their current context.\n\nThese sheets display as a result of a user-initiated action. They slide up from the bottom of the screen to reveal additional information and can be dismissed in order to resume the work in the parent flow. \n\n### Types\n\n<br/>\n\n#### Modal bottom sheet\n\nA sheet of this type appears above other UI elements and must be \ndismissed in order to interact with the underlying content. As indicated by the \nname this sheet will appear along with an overlay to dim the background, giving \nfocus to the bottom sheet. Such sheets are dismissible in nature and hence contain a 'Close' action at the top right.\n\n![Modal bottom sheet](./images/bottomsheet-1.png)\n\n<br/>\n<br/>\n\n#### Non-Modal bottom sheet\n\nThis sheet displays in-app content that supplements the main view and co-exists with the main UI. It remains visible even when not actively in use, resting at the same elevation as an app. \n\nNon-modal sheets can either be dismissible or non-dismissible in nature depending upon the use case. Such sheets are great when you have supplementary actions for people to use without pausing the main task.\n\n![Non-Modal bottom sheet](./images/bottomsheet-2.png)\n\n<br/>\n<br/>\n\n### Properties\n\n<br/>\n\n<Card shadow='none'>\n  <Table\n    showMenu={false}\n    separator={true}\n    data={[\n      {\n        Property: 'Height',\n        Value: 'The height can take following values: \"Up to 60%\" and \"93%\"',\n        Configurable: '❌',\n      },\n      {\n        Property: 'Width',\n        Value: 'Full Width',\n        Configurable: '❌',\n      },\n      {\n        Property: 'Heading',\n        Value: '<Heading>',\n        Configurable: '❌',\n      },\n      {\n        Property: 'Subheading',\n        Value: '<Subheading>',\n        Configurable: 'Optional',\n      },\n      {\n        Property: 'Divider',\n        Value: '-',\n        Configurable: 'Optional',\n      },\n    ]}\n    schema={[\n      {\n        name: 'Property',\n        displayName: 'Property',\n        width: '34%',\n        sorting: false,\n        separator: true,\n        cellType: 'DEFAULT'\n      },\n      {\n        name: 'Value',\n        displayName: 'Value',\n        width: '33%',\n        sorting: false,\n        separator: true\n        \n      },\n      {\n        name: 'Configurable',\n        displayName: 'Configurable?',\n        width: '33%',\n        sorting: false,\n        separator: true\n      },\n    ]}\n    withHeader={false}\n  />\n</Card>\n<br/>\n<br/>\n\n### Usage\n\n<br/>\n\n#### Height Constraints\n\nThere are two types of heights a bottom sheet can have -\n\n-   **Half View - Variable height (up to a max of 60% screen height)** \n\nIn this case, height of the sheet will depend on the content it is accommodating. This dynamic height can go up to 60% of screen height in order to provide easy access to the topmost actions, allowing progressive disclosure of the sheet’s content.\n\n-   **Full View - Fixed maximum height (93% of screen height)** \n\nThis sheet spans across most of the screen height and is suitable for large content.\nIf in case 1 above, the height of the data cannot be predicted i.e. the data can be scrollable or not, it is recommended to transition the 60% height to 93% when a user starts scrolling.\n\n**Note - The figures of 60% and 93% were chosen to maximize the available area for content.**\n\nBased on the content, the bottom sheet can adjust it's height upto 60% of the screen height.\n\n![The bottom sheet can adjust it's height upto 60% of the screen height](./images/bottomsheet-3.png)\n\n<br/>\n\nSheet spanning across most of the screen height, suitable for large content.\n\n![Sheet spanning across most of the screen height](./images/bottomsheet-4.png)\n\n<br/>\n<br/>\n\n#### Scrolling Behaviour\n\nThe height of the bottom sheet can be adjusted by scrolling upwards/downwards on the sheet to take up more of the viewport. Bottom sheets whose contents exceed 60% of the screen height can be pulled across the full screen (93% of the overall height), and then scrolling internally.\n\nAt the time of scrolling, the header sticks to the top of the sheet having a header divider, whereas the content below it scrolls. \n\n<Card shadow='none'>\n  <Table\n    showMenu={false}\n    separator={true}\n    data={[\n      {\n        Property: 'Under 60% of screen height',\n        Value: 'Matches the content height',\n        Configurable: 'No scrolling needed',\n      },\n      {\n        Property: 'Greater than 60% of screen height',\n        Value: 'Recommend default: 60% of screen height, After scroll: 93% of screen height',\n        Configurable: 'On scroll, the sheet expands to its max height and scrolls content internally',\n      },\n    ]}\n    schema={[\n      {\n        name: 'Property',\n        displayName: 'Content',\n        width: '30%',\n        sorting: false,\n        separator: true,\n        cellType: 'DEFAULT'\n      },\n      {\n        name: 'Value',\n        displayName: 'Sheet Height',\n        width: '40%',\n        sorting: false,\n        separator: true\n        \n      },\n      {\n        name: 'Configurable',\n        displayName: 'Scrolling Behaviour',\n        width: '30%',\n        sorting: false,\n        separator: true\n      },\n    ]}\n    withHeader={false}\n  />\n</Card>\n<br/>\n<br/>\n\n<img src='./images/bottomsheet-5.gif' width='100%' height='auto'/>\n\n<br/>\n<br/>\n<br/>\n\n#### Dismissible vs Non-Dismissible Sheet\n\n<br/>\n\n<Card shadow='none'>\n  <Table\n    showMenu={false}\n    separator={true}\n    data={[\n      {\n        Property: 'Dismissible always',\n        Value: 'Dismissible or non-dismissible depending on the use case',\n      },\n    ]}\n    schema={[\n      {\n        name: 'Property',\n        displayName: 'Modal sheet',\n        width: '30%',\n        sorting: false,\n        separator: true,\n        cellType: 'DEFAULT'\n      },\n      {\n        name: 'Value',\n        displayName: 'Non-modal sheet',\n        width: '70%',\n        sorting: false,\n        separator: true\n        \n      },\n    ]}\n    withHeader={false}\n  />\n</Card>\n<br/>\n<br/>\n\n#### Dismissing a Bottom Sheet\n\nBottom sheets can be dismissed in the following ways: \n\n##### Close Button\n\nSheets can be closed by clicking the close affordance in the header of the bottom sheets. \n\n##### Tapping the overlay\n\nModal Sheets can also be closed by clicking on the overlay behind sheets.\n\n<br/>\n\n#### Resizing a sheet with drag handle\n\nA non-modal sheet can be dismissible or not. In case it is not, the users can drag or flick the sheet from the handle bar area to resize and snap it to different heights.\n\nA drag handle **must not be** used to drag down to close a sheet.\n\n<br/>\n\n#### Bottom Sheet vs Page\n\nA page takes people to a whole new space detaching them from the parent flow, whereas a sheet allows part of the parent view to remain visible behind it, helping people retain their original context as they interact with the sheet. \n\nBottom sheets should not have complex flows in them. For complex and multi-step flows consider using pages. \n\n*Do Don't iamge*","fileAbsolutePath":"/Users/harshjain/Documents/innovaccer/projects/design system/design-system/docs/src/pages/mobile/components/bottomSheet/usage.mdx","__gatsby_resolved":{"frontmatter":{"title":"Bottom sheet"}}}}},
    "staticQueryHashes": ["1514734083","227138135","2319071508","2754858070","3057627995","3390246842","345969789","3719803338"]}