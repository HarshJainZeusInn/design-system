{"version":3,"file":"component---src-pages-components-card-usage-mdx-32e3346ac4a9b9b8ab86.js","mappings":"sLAUsBA,E,6DAFTC,EAAe,GAOtBC,GALgBF,EAKQ,UALA,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,cAASG,KAIZG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,QAACI,EAAD,iBAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,qRACA,kFACA,oBACA,cACE,GAAM,SADR,UAGA,oBACA,cACE,GAAM,WADR,YAGA,0FAA4E,gBAAMC,WAAW,IACzF,UAAa,iBAD2D,aAA5E,iBAGA,QAACV,EAAD,CAASF,KAAK,eAAeW,QAAQ,aACrC,cACE,GAAM,WADR,YAGA,iMACA,QAACT,EAAD,CAASF,KAAK,eAAeW,QAAQ,aACrC,cACE,GAAM,QADR,SAGA,yGACA,QAACT,EAAD,CAASF,KAAK,YAAYW,QAAQ,aAClC,oBACA,cACE,GAAM,SADR,UAGA,oBACA,cACE,GAAM,2BADR,4BAGA,+LACA,QAACT,EAAD,CAASF,KAAK,eAAeW,QAAQ,aACrC,cACE,GAAM,0BADR,2BAGA,4LACA,QAACT,EAAD,CAASF,KAAK,eAAeW,QAAQ,aACrC,cACE,GAAM,8BADR,+BAGA,8HACA,QAACT,EAAD,CAASF,KAAK,0BAA0BW,QAAQ,aAChD,cACE,GAAM,cADR,eAGA,6IACA,QAACT,EAAD,CAASF,KAAK,eAAeW,QAAQ,aAKzCF,EAAWI,gBAAiB","sources":["webpack://docs/./src/pages/components/card/usage.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/harshjain/Documents/innovaccer/projects/design system/design-system/docs/src/components/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Preview = makeShortcode(\"Preview\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Cards make it easy to scan for relevant and actionable information by grouping them. Elements, like text and images, should be placed inside them in a way that clearly indicates hierarchy. This way multiple different sections can be created within a page.`}</p>\n    <p>{`Cards can be arranged vertically, horizontally or in a grid.`}</p>\n    <br />\n    <h4 {...{\n      \"id\": \"types\"\n    }}>{`Types`}</h4>\n    <br />\n    <h5 {...{\n      \"id\": \"default\"\n    }}>{`Default`}</h5>\n    <p>{`Default card is the most used type of card. It consists of a shadow, `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`Shadow 10`}</code>{` by default.`}</p>\n    <Preview name='default-card' mdxType=\"Preview\" />\n    <h5 {...{\n      \"id\": \"subdued\"\n    }}>{`Subdued`}</h5>\n    <p>{`Subdued card is used to highlight a section inside a card. The condition is that this section must be at the edges (top, right, bottom, left) and not somewhere in between.`}</p>\n    <Preview name='card-subdued' mdxType=\"Preview\" />\n    <h5 {...{\n      \"id\": \"flat\"\n    }}>{`Flat`}</h5>\n    <p>{`Flat card is used to create sections within a default card i.e. card inside a card.`}</p>\n    <Preview name='card-flat' mdxType=\"Preview\" />\n    <br />\n    <h4 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h4>\n    <br />\n    <h5 {...{\n      \"id\": \"scrolling-inside-a-card\"\n    }}>{`Scrolling inside a card`}</h5>\n    <p>{`To indicate that the content is scrollable within a card, use a scrollbar. The dividers in the header and the footer should only be shown when the content is scrollable.`}</p>\n    <Preview name=\"default-card\" mdxType=\"Preview\" />\n    <h5 {...{\n      \"id\": \"highlighting-a-section\"\n    }}>{`Highlighting a section`}</h5>\n    <p>{`Subdued card is used to highlight a section inside a card. The condition is that this section must be at the edges (bottom, right, etc.) and not somewhere in between.`}</p>\n    <Preview name=\"card-subdued\" mdxType=\"Preview\" />\n    <h5 {...{\n      \"id\": \"card-within-a-default-card\"\n    }}>{`Card within a default card`}</h5>\n    <p>{`Flat card is used when there is a need to create sections within a default card i.e. card inside a card.`}</p>\n    <Preview name=\"card-card-within-a-card\" mdxType=\"Preview\" />\n    <h5 {...{\n      \"id\": \"empty-card\"\n    }}>{`Empty card`}</h5>\n    <p>{`When data is not available, the card remains empty. In that case, an illustration and/or an error message is displayed.`}</p>\n    <Preview name=\"default-card\" mdxType=\"Preview\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","Preview","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"sourceRoot":""}