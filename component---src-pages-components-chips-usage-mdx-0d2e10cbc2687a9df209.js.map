{"version":3,"file":"component---src-pages-components-chips-usage-mdx-0d2e10cbc2687a9df209.js","mappings":"sLAUsBA,E,6DAFTC,EAAe,GAOtBC,GALgBF,EAKQ,UALA,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,cAASG,KAIZG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,QAACI,EAAD,iBAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,oSACA,oBACA,cACE,GAAM,SADR,UAGA,oBACA,cACE,GAAM,mBADR,oBAGA,iQACA,QAACT,EAAD,CAASF,KAAK,iBAAiBW,QAAQ,aACvC,oBACA,cACE,GAAM,gBADR,iBAGA,gPACA,QAACT,EAAD,CAASF,KAAK,iBAAiBW,QAAQ,aACvC,oBACA,cACE,GAAM,eADR,gBAGA,gGACA,QAACT,EAAD,CAASF,KAAK,iBAAiBW,QAAQ,aACvC,oBACA,cACE,GAAM,SADR,UAGA,oBACA,cACE,GAAM,mCADR,qCAGA,uNAKJF,EAAWG,gBAAiB","sources":["webpack://docs/./src/pages/components/chips/usage.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/harshjain/Documents/innovaccer/projects/design system/design-system/docs/src/components/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Preview = makeShortcode(\"Preview\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Chips are compact components that appear in a group. Since they appear in a group, they are compact in size and come to the rescue when regular components are either too overwhelming (e.g. buttons for selection) or too underwhelming (e.g. dropdowns for applied filters).`}</p>\n    <br />\n    <h4 {...{\n      \"id\": \"types\"\n    }}>{`Types`}</h4>\n    <br />\n    <h5 {...{\n      \"id\": \"selection-chips\"\n    }}>{`Selection chips`}</h5>\n    <p>{`Selection chips are used to let the users select one or many options from a group and the effect is immediate. For example - applying filters on a page. In that case, as soon as a filter chip is clicked, the filtered results are shown.`}</p>\n    <Preview name=\"chip-selection\" mdxType=\"Preview\" />\n    <br />\n    <h5 {...{\n      \"id\": \"action-chips\"\n    }}>{`Action chips`}</h5>\n    <p>{`Action chips are used when there is a group of related actions to perform. These actions are contextual and dynamic. Buttons canâ€™t be used in this case as they should be used for persistent and consistent actions only.`}</p>\n    <Preview name=\"chip-selection\" mdxType=\"Preview\" />\n    <br />\n    <h5 {...{\n      \"id\": \"input-chips\"\n    }}>{`Input chips`}</h5>\n    <p>{`Input chips are used inside inputs to behave as removable entries or tags.`}</p>\n    <Preview name=\"chip-selection\" mdxType=\"Preview\" />\n    <br />\n    <h4 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h4>\n    <br />\n    <h5 {...{\n      \"id\": \"selection-chip-vs-radiocheckbox\"\n    }}>{`Selection chip vs radio/checkbox`}</h5>\n    <p>{`Selection chips should be used when an immediate change/result is expected on selection. Radio/checkbox should be used when an explicit action is needed to submit the selection, e.g. in a form.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","Preview","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","isMDXComponent"],"sourceRoot":""}